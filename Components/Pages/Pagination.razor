@using Microsoft.AspNetCore.Components

@code {
    [Parameter]
    public int TotalPages { get; set; } = 20;

    [Parameter]
    public int CurrentPage { get; set; } = 1;

    [Parameter]
    public EventCallback<int> OnPageChanged { get; set; }

    private int VisiblePages = 5;
    private int PageSize = 3;

    private int StartPage
    {
        get
        {
            int start = ((CurrentPage - 1) / VisiblePages) * VisiblePages + 1;
            return Math.Max(1, start);
        }
    }

    private int EndPage => Math.Min(StartPage + VisiblePages - 1, TotalPages);

    private async Task GoToPage(int page)
    {
        if (page < 1 || page == CurrentPage)
            return;

        CurrentPage = page;
        await OnPageChanged.InvokeAsync(page);
    }
  
}

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
            <button class="page-link" @onclick="() => GoToPage(CurrentPage - 1)">Previous</button>
        </li>

        @for (int i = StartPage; i <= EndPage; i++)
        {
            <li class="page-item @(i == CurrentPage ? "active" : "")">
                <button class="page-link" @onclick="() => GoToPage(i)">@i</button>
            </li>
        }

        <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
            <button class="page-link" @onclick="() => GoToPage(CurrentPage + 1)">Next</button>
        </li>
    </ul>
</nav>
